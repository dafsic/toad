syntax = "proto3";

package kraken_grid;

option go_package = ".;kraken_grid";

service KrakenGridService {
  rpc Stop(StopRequest) returns (Response) {}
  rpc Run(RunRequest) returns (Response) {}
  rpc Status(StatusRequest) returns (StatusResponse) {}
  rpc PlaceOrder(PlaceOrderRequest) returns (Response) {}
}

message StopRequest {
  string reason = 1; // Reason for stopping the service
}

message RunRequest {
  string request_id = 1; // Unique identifier for the run request
}

message StatusRequest {
  string request_id = 1; // Unique identifier for the status request
}

message PlaceOrderRequest {
  string side = 1;       // Order direction: "buy" or "sell"
  int32 multiplier = 2;  // Price multiplier, used to calculate the actual price
  double price = 3;      // Price at which to place the order
}

message Response {
  bool success = 1;      // Whether the operation was successful
  string message = 2;    // Response message
}

message StatusResponse {
  string status = 1;     // Current status of the service
  string message = 2;    // Additional message or information
}